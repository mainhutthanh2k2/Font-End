{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Messages = void 0;\nconst server_client_1 = require(\"@vonage/server-client\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst log = (0, debug_1.default)('vonage:messages');\nclass Messages extends server_client_1.Client {\n  /**\n     * Handle various ways the Messages API handles auth\n     * The Messages API handles both JWT (preferred) as well as Basic so we\n     * cannot just set a local authType\n     *\n     * @param {any} request - Object containing request data\n     */\n  async addAuthenticationToRequest(request) {\n    log('Auth config', this.auth);\n    this.authType = server_client_1.AuthenticationType.KEY_SECRET;\n    if (this.auth.applicationId && this.auth.privateKey) {\n      log('Adding JWT token to request');\n      this.authType = server_client_1.AuthenticationType.JWT;\n    }\n    if (this.auth.signature) {\n      log('Signing the request');\n      this.authType = server_client_1.AuthenticationType.SIGNATURE;\n    }\n    return super.addAuthenticationToRequest(request);\n  }\n  async send(message) {\n    const resp = await this.sendPostRequest(`${this.config.apiHost}/v1/messages`, JSON.parse(JSON.stringify(server_client_1.Client.transformers.snakeCaseObjectKeys(message, true))));\n    return {\n      messageUUID: resp.data?.message_uuid\n    };\n  }\n}\nexports.Messages = Messages;","map":{"version":3,"names":["server_client_1","require","debug_1","__importDefault","log","default","Messages","Client","addAuthenticationToRequest","request","auth","authType","AuthenticationType","KEY_SECRET","applicationId","privateKey","JWT","signature","SIGNATURE","send","message","resp","sendPostRequest","config","apiHost","JSON","parse","stringify","transformers","snakeCaseObjectKeys","messageUUID","data","message_uuid","exports"],"sources":["../lib/messages.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;AAAA,MAAAA,eAAA,GAAAC,OAAA;AAIA,MAAAC,OAAA,GAAAC,eAAA,CAAAF,OAAA;AAEA,MAAMG,GAAG,GAAG,IAAAF,OAAA,CAAAG,OAAK,EAAC,iBAAiB,CAAC;AAEpC,MAAaC,QAAS,SAAQN,eAAA,CAAAO,MAAM;EAClC;;;;;;;EAOO,MAAMC,0BAA0BA,CACrCC,OAAqB;IAErBL,GAAG,CAAC,aAAa,EAAE,IAAI,CAACM,IAAI,CAAC;IAC7B,IAAI,CAACC,QAAQ,GAAGX,eAAA,CAAAY,kBAAkB,CAACC,UAAU;IAE7C,IAAI,IAAI,CAACH,IAAI,CAACI,aAAa,IAAI,IAAI,CAACJ,IAAI,CAACK,UAAU,EAAE;MACnDX,GAAG,CAAC,6BAA6B,CAAC;MAClC,IAAI,CAACO,QAAQ,GAAGX,eAAA,CAAAY,kBAAkB,CAACI,GAAG;;IAGxC,IAAI,IAAI,CAACN,IAAI,CAACO,SAAS,EAAE;MACvBb,GAAG,CAAC,qBAAqB,CAAC;MAC1B,IAAI,CAACO,QAAQ,GAAGX,eAAA,CAAAY,kBAAkB,CAACM,SAAS;;IAG9C,OAAO,KAAK,CAACV,0BAA0B,CAACC,OAAO,CAAC;EAClD;EAEO,MAAMU,IAAIA,CAACC,OAA0B;IAC1C,MAAMC,IAAI,GAAG,MAAM,IAAI,CAACC,eAAe,CACrC,GAAG,IAAI,CAACC,MAAM,CAACC,OAAO,cAAc,EACpCC,IAAI,CAACC,KAAK,CACRD,IAAI,CAACE,SAAS,CACZ3B,eAAA,CAAAO,MAAM,CAACqB,YAAY,CAACC,mBAAmB,CAACT,OAAO,EAAE,IAAI,CAAC,CACvD,CACF,CACF;IAED,OAAO;MACLU,WAAW,EAAET,IAAI,CAACU,IAAI,EAAEC;KACzB;EACH;;AAxCFC,OAAA,CAAA3B,QAAA,GAAAA,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}