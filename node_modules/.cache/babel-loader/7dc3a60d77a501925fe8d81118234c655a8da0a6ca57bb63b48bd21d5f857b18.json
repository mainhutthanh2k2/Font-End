{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Auth = void 0;\nconst jwt_1 = require(\"@vonage/jwt\");\nconst crypto_1 = require(\"crypto\");\nconst fs_1 = require(\"fs\");\nconst enums_1 = require(\"./enums\");\nconst index_1 = require(\"./errors/index\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst log = (0, debug_1.default)('vonage:auth');\nclass Auth {\n  apiKey;\n  apiSecret;\n  privateKey;\n  applicationId;\n  signature;\n  jwtOptions;\n  constructor(opts) {\n    this.apiKey = opts?.apiKey || '';\n    this.apiSecret = opts?.apiSecret || '';\n    this.signature = opts?.signature || null;\n    this.applicationId = opts?.applicationId || null;\n    this.jwtOptions = opts?.jwtOptions || {};\n    if ((0, fs_1.existsSync)(opts.privateKey)) {\n      log('Reading private key file');\n      opts.privateKey = (0, fs_1.readFileSync)(opts.privateKey).toString();\n    }\n    this.privateKey = opts.privateKey instanceof Buffer ? opts.privateKey.toString() : opts.privateKey;\n  }\n  getQueryParams = async params => {\n    if (!this.apiKey) {\n      throw new index_1.MissingApiKeyError();\n    }\n    if (!this.apiSecret) {\n      throw new index_1.MissingApiSecretError();\n    }\n    if (typeof this.apiKey !== 'string') {\n      throw new index_1.InvalidApiKeyError();\n    }\n    if (typeof this.apiSecret !== 'string') {\n      throw new index_1.InvalidApiSecretError();\n    }\n    return {\n      ...params,\n      api_key: this.apiKey,\n      api_secret: this.apiSecret\n    };\n  };\n  createBasicHeader = async () => {\n    log('Creating basic auth header');\n    if (!this.apiKey) {\n      throw new index_1.MissingApiKeyError();\n    }\n    if (!this.apiSecret) {\n      throw new index_1.MissingApiSecretError();\n    }\n    if (typeof this.apiKey !== 'string') {\n      throw new index_1.InvalidApiKeyError();\n    }\n    if (typeof this.apiSecret !== 'string') {\n      throw new index_1.InvalidApiSecretError();\n    }\n    const buf = Buffer.from(`${this.apiKey}:${this.apiSecret}`);\n    return `Basic ${buf.toString('base64')}`;\n  };\n  createBearerHeader = async () => {\n    log('Creating bearer header');\n    return `Bearer ${(0, jwt_1.tokenGenerate)(this.applicationId, this.privateKey, this.jwtOptions)}`;\n  };\n  createSignatureHash = async params => {\n    log('Creating signature hash');\n    if (!this.apiKey) {\n      throw new index_1.MissingApiKeyError();\n    }\n    if (typeof this.apiKey !== 'string') {\n      throw new index_1.InvalidApiKeyError();\n    }\n    if (!this.signature.algorithm) {\n      throw new index_1.MissingSignatureError();\n    }\n    if (!this.signature.secret) {\n      throw new index_1.MissingApiSecretError();\n    }\n    if (typeof this.signature.secret !== 'string') {\n      throw new index_1.InvalidApiSecretError();\n    }\n    const returnParams = {\n      ...params,\n      api_key: this.apiKey\n    };\n    // Add the current timestamp to the parameters list with the key\n    // 'timestamp'. This should be an integer containing the number of seconds\n    // since the epoch (UNIX time))\n    if (!returnParams.timestamp) {\n      returnParams.timestamp = Math.floor(Date.now() / 1000).toString();\n    }\n    const sortedParams = new URLSearchParams(returnParams);\n    sortedParams.sort();\n    const stringifiedParamsforSigning = sortedParams.toString().replace(/(&|=)/gi, '_');\n    switch (this.signature.algorithm) {\n      case enums_1.AlgorithmTypes.md5hash:\n        returnParams.sig = (0, crypto_1.createHash)('md5').update(`${stringifiedParamsforSigning}${this.signature.secret}`).digest('hex');\n        break;\n      case enums_1.AlgorithmTypes.md5hmac:\n        returnParams.sig = (0, crypto_1.createHmac)('md5', this.signature.secret).update(stringifiedParamsforSigning).digest('hex');\n        break;\n      case enums_1.AlgorithmTypes.sha1hmac:\n        returnParams.sig = (0, crypto_1.createHmac)('sha1', this.signature.secret).update(stringifiedParamsforSigning).digest('hex');\n        break;\n      case enums_1.AlgorithmTypes.sha256hmac:\n        returnParams.sig = (0, crypto_1.createHmac)('sha256', this.signature.secret).update(stringifiedParamsforSigning).digest('hex');\n        break;\n      case enums_1.AlgorithmTypes.sha512hmac:\n        returnParams.sig = (0, crypto_1.createHmac)('sha512', this.signature.secret).update(stringifiedParamsforSigning).digest('hex');\n        break;\n      default:\n        throw new index_1.InvalidSignatureAlgorithmError();\n    }\n    return returnParams;\n  };\n}\nexports.Auth = Auth;","map":{"version":3,"names":["jwt_1","require","crypto_1","fs_1","enums_1","index_1","debug_1","__importDefault","log","default","Auth","apiKey","apiSecret","privateKey","applicationId","signature","jwtOptions","constructor","opts","existsSync","readFileSync","toString","Buffer","getQueryParams","params","MissingApiKeyError","MissingApiSecretError","InvalidApiKeyError","InvalidApiSecretError","api_key","api_secret","createBasicHeader","buf","from","createBearerHeader","tokenGenerate","createSignatureHash","algorithm","MissingSignatureError","secret","returnParams","timestamp","Math","floor","Date","now","sortedParams","URLSearchParams","sort","stringifiedParamsforSigning","replace","AlgorithmTypes","md5hash","sig","createHash","update","digest","md5hmac","createHmac","sha1hmac","sha256hmac","sha512hmac","InvalidSignatureAlgorithmError","exports"],"sources":["../lib/auth.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}