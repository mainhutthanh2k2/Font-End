{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Vetch = void 0;\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst querystring_1 = require(\"querystring\");\nconst lodash_merge_1 = __importDefault(require(\"lodash.merge\"));\nconst http_1 = __importDefault(require(\"http\"));\nconst https_1 = __importDefault(require(\"https\"));\nconst vetchError_1 = require(\"./types/vetchError\");\nconst responseTypes_1 = require(\"./enums/responseTypes\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst log = (0, debug_1.default)('vonage:vetch');\nclass Vetch {\n  defaults;\n  constructor(defaults) {\n    this.defaults = defaults || {\n      responseType: responseTypes_1.ResponseTypes.json\n    };\n    if (!this.defaults.responseType) {\n      this.defaults.responseType = responseTypes_1.ResponseTypes.json;\n    }\n  }\n  async _defaultAdapter(opts) {\n    const {\n      timeout\n    } = opts;\n    let timeoutId = null;\n    const fetchConfig = opts;\n    if (timeout) {\n      const controller = new AbortController();\n      timeoutId = setTimeout(() => controller.abort(), timeout);\n      fetchConfig.signal = controller.signal;\n    }\n    try {\n      const res = await (0, node_fetch_1.default)(opts.url, fetchConfig);\n      const data = await this.getResponseData(opts, res);\n      return this.createResponse(opts, res, data);\n    } finally {\n      clearTimeout(timeoutId);\n    }\n  }\n  async request(opts = {}) {\n    opts = this.validateOpts(opts);\n    log('api request', opts);\n    const formattedResponse = await this._defaultAdapter(opts);\n    log('api response', formattedResponse);\n    if (!opts.checkStatus(formattedResponse.status)) {\n      const err = new vetchError_1.VetchError(`Request failed with status code ${formattedResponse.status}`, opts);\n      err.code = String(formattedResponse.status);\n      err.response = formattedResponse;\n      throw err;\n    }\n    return formattedResponse;\n  }\n  async getResponseData(opts, res) {\n    switch (opts.responseType) {\n      case 'stream':\n        return res.buffer();\n      case 'json':\n        {\n          let data = await res.text();\n          try {\n            data = JSON.parse(data);\n          } catch {\n            // continue\n          }\n          return data;\n        }\n      default:\n        return res.text();\n    }\n  }\n  validateOpts(options) {\n    const opts = (0, lodash_merge_1.default)({}, this.defaults, options);\n    opts.headers = opts.headers || {};\n    opts.checkStatus = this.checkStatus;\n    if (!opts.url) {\n      throw new Error('URL is required.');\n    }\n    const baseUrl = opts.baseUrl || opts.baseURL;\n    if (baseUrl) {\n      opts.url = baseUrl + opts.url;\n    }\n    if (opts.params) {\n      let queryParams = (0, querystring_1.stringify)(opts.params);\n      if (queryParams.startsWith('?')) {\n        queryParams = queryParams.slice(1);\n      }\n      const prefix = opts.url.includes('?') ? '&' : '?';\n      opts.url = `${opts.url}${prefix}${queryParams}`;\n    }\n    if (opts.data) {\n      if (typeof opts.data === 'object') {\n        opts.body = JSON.stringify(opts.data);\n        opts.headers['Content-Type'] = 'application/json';\n      } else {\n        opts.body = opts.data;\n      }\n    }\n    if (!opts.headers.Accept && opts.responseType === 'json') {\n      opts.headers.Accept = 'application/json';\n    }\n    // Set our user agent\n    opts.headers['user-agent'] = [`@vonage/server-sdk/3.0.0`, ` node/${process.version.replace('v', '')}`, opts.appendUserAgent ? ` ${opts.appendUserAgent}` : ''].join('');\n    // Allow a custom timeout to be used\n    const httpAgent = new http_1.default.Agent({\n      timeout: opts.timeout\n    });\n    const httpsAgent = new https_1.default.Agent({\n      timeout: opts.timeout\n    });\n    opts.agent = parsedUrl => {\n      if (parsedUrl.protocol === 'http:') {\n        return httpAgent;\n      } else {\n        return httpsAgent;\n      }\n    };\n    return opts;\n  }\n  checkStatus(status) {\n    return status >= 200 && status < 300;\n  }\n  createResponse(opts, res, data) {\n    const headers = {};\n    res.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    return {\n      config: opts,\n      data: data,\n      headers,\n      status: res.status,\n      statusText: res.statusText,\n      request: {\n        responseUrl: res.url\n      }\n    };\n  }\n}\nexports.Vetch = Vetch;","map":{"version":3,"names":["node_fetch_1","__importDefault","require","querystring_1","lodash_merge_1","http_1","https_1","vetchError_1","responseTypes_1","debug_1","log","default","Vetch","defaults","constructor","responseType","ResponseTypes","json","_defaultAdapter","opts","timeout","timeoutId","fetchConfig","controller","AbortController","setTimeout","abort","signal","res","url","data","getResponseData","createResponse","clearTimeout","request","validateOpts","formattedResponse","checkStatus","status","err","VetchError","code","String","response","buffer","text","JSON","parse","options","headers","Error","baseUrl","baseURL","params","queryParams","stringify","startsWith","slice","prefix","includes","body","Accept","process","version","replace","appendUserAgent","join","httpAgent","Agent","httpsAgent","agent","parsedUrl","protocol","forEach","value","key","config","statusText","responseUrl","exports"],"sources":["../lib/vetch.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}